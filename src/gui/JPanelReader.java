/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import entity.Book;
import entity.Reader;
import interfaces.Keeping;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionListener;
import myclasses.KeeperToBase;

/**
 *
 * @author user
 */
public class JPanelReader extends javax.swing.JPanel {
    Keeping keeper = new KeeperToBase();
    List<Reader> readers;
    DefaultComboBoxModel<Reader> myComboBoxModel;
    /**
     * Creates new form NewJPanel
     */
    public JPanelReader() {
        initComponents();
        readers = keeper.loadReaders();
        //myComboBoxModel = new MyComboBoxModel(readers.toArray(new Reader[readers.size()]));
        jComboBoxReaders.setModel(new DefaultComboBoxModel(readers.toArray(new Reader[readers.size()])));
        jComboBoxReaders.setRenderer(createListRenderer());
        jComboBoxReaders.addItemListener((e) -> {
            if (!e.getItemSelectable()) {
                System.out.println(e.);
            }
        });
    }
    private ListCellRenderer<? super Reader> createListRenderer(){
        return new DefaultListCellRenderer(){
            private final Color background = new Color(0, 100, 255, 15);
            private final Color defaultBackground = (Color) UIManager.get("List.background");
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index,
                                                          boolean isSelected, boolean cellHasFocus) {
                Component component = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (component instanceof JLabel) {
                    JLabel label = (JLabel) component;
                    Reader reader = (Reader) value;
                    label.setText(String.format("%d. %s. %s. Телефон: %s%n"
                            ,reader.getId()
                            ,reader.getFirstname()
                            ,reader.getLastname()
                            ,reader.getPhone()
                    ));
                    if (!isSelected) {
                        label.setBackground(index % 2 == 0 ? background : defaultBackground);
                    }
                }
                return component;
            }
        };
    }
    private ListSelectionListener createListSelectionListener(JComboBox<Reader> list) {
        return e -> {
            if (!e.getValueIsAdjusting()) {
                System.out.println(list.getSelectedItem());
            }
        };
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelChoiceReader = new javax.swing.JLabel();
        jComboBoxReaders = new javax.swing.JComboBox<>();

        jLabelChoiceReader.setText("Выбери себя");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelChoiceReader)
                    .addComponent(jComboBoxReaders, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelChoiceReader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxReaders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Reader> jComboBoxReaders;
    private javax.swing.JLabel jLabelChoiceReader;
    // End of variables declaration//GEN-END:variables
}
